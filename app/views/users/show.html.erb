<%#### USERS/show ########### %>

<%#= javascript_include_tag "//www.google.com/jsapi", "chartkick" %> <%# need this on any page that has a chart %>
<!-- <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.0-beta.5/angular.min.js"></script> -->
<%# rails includes all this stuff automatically becasue its in the asset pipeline %>
<!-- <script src="vendor/jquery.min.js"></script>
<script type"text/javascript" src="/path/bootstrap-dropdown-checkbox.js"></script> <%# needs to be after jquery call %>
<link rel="stylesheet" type="text/css" href="/path/bootstrap-dropdown-checkbox.css"> -->

<div class="wrapper body">
  <div class="container">
    <div class="row">
      <%= render "users/signed_in_sidebar" %>
      <div class="col-md-8">
        <!-- this is the main section -->
        <div class="well well-sm">
          <% user = set_user(params) #User.find_by(id: params[:id]) %>  
          <p><b><%= user.name + " | " + user.email %> </b></p>
          <%# graph_data(@user.id) %>  <%# get the top 5 attributes for this user and set them in @show_attributes %>
          <%# if @show_attributes.any? %>
            <%#= bar_chart @show_attributes, :height => "200px"%> <%# call chartkick %>
          <%# else %>
            <%#= user.name + " has not yet received any attribute feedback" %>
          <%# end %>  
        </div>
        <div class="well well-sm" id="colleaguedDisplay">
          <h4>Give feedback for <%= @user.name %></h4>
          
          <!-- Search: <input ng-model="query">
          <div ng-controller="List">
            <ul>
              <li ng-repeat="name in names | filter:query ">{{name}}</li>
            </ul>
          </div>
          <script>
            var List = function ($scope) {
              $scope.names = ["Tom", "Jeffrey", "Phil", "Mark", "Paul"];
            }
          </script>  -->

          <% @attributes = Attribute.all %>  <%# this should be in controller but it's not going there%>

          <%# from http://codequizzes.wordpress.com/2013/06/06/rails-javascript-workflow-rendering-javascript-partials/ %>
          <%= content_tag :div, class: "attributes_class", data: {attributes: @attributes} do %>
          <% end %>

          <%#= @attributes.first.attribute_name %><br>


          <%############# first, set up a js link and on click, create a feedback ######## %>

          <script>
            var anarray = ["Phil", "Joe", "Mike"];

          </script>
          
          <script>
          
            var a = document.createElement('a');
            var linkText = document.createTextNode("my title text");
            var fbdiv = document.getElementById("colleaguedDisplay")
            a.appendChild(linkText);
            a.title = "my title text";
            a.href = "http://example.com";
            fbdiv.appendChild(a);

          </script>

          <%############# ####################################################### ######## %>

          Write feedback: <input ng-model="query">
          <div ng-controller="List" class="colleage_attribs">
            <ul>
              <li ng-repeat="attrib in attribs | filter:query ">
                <div ng-switch on="attrib.category">
                  <%= puts "params[:id] = #{params[:id]}" %>
                  <span ng-switch-when="posattrib"><a href=<%="/feedbacks/attribute_selected/#{params[:id]}"%>>{{attrib.attribute_name}}</a> | Public | to <%=user.name%> only</span>
                  <span ng-switch-when="constructive">{{attrib.attribute_name}} | Employee and Manager</span>
                  <span ng-switch-when="alert">{{attrib.attribute_name}} | Manager only</span>
                  <span ng-switch-default></span>
                </div>
              <%# it's not JSON, but attrib.attribute_name works fine %>
            </ul>
          </div>

          <%# puts seeded attributes into $scope.attribs array %>
          <script>  
            var List = function ($scope) {
              // $('.attributes_class').data('attributes')[1].attribute_name    gives "is the best at managment"
              var arrayLength = $('.attributes_class').data('attributes').length;
              $scope.attribs = [];
              for (var i = 0; i < arrayLength; i++) {
                $scope.attribs.push($('.attributes_class').data('attributes')[i]);
              }

              // $scope.attribs = ["Tom", "Jeffrey", "Phil", "Mark", "Paul"];
            }
          </script>
        </div>

        here1
        <!-- from TODOMVC -->
        <div ng-app="todomvc">
            <ng-view />
        here2
            <script type="text/ng-template" id="todomvc-index.html">
              <section id="todoapp" ng-controller="TodoCtrl">
                <header id="header">
                  <h1>todos</h1>
                  <form id="todo-form" ng-submit="addTodo()">
                    <input id="new-todo" placeholder="What needs to be done?" ng-model="newTodo" autofocus>
                  </form>
                </header>
                here3
                <section id="main" ng-show="todos.length" ng-cloak>
                  <input id="toggle-all" type="checkbox" ng-model="allChecked" ng-click="markAll(allChecked)">
                  <label for="toggle-all">Mark all as complete</label>
                  <ul id="todo-list">
                    <li ng-repeat="todo in todos | filter:statusFilter track by $index" ng-class="{completed: todo.completed, editing: todo == editedTodo}">
                      <div class="view">
                        <input class="toggle" type="checkbox" ng-model="todo.completed">
                        <label ng-dblclick="editTodo(todo)">{{todo.title}}</label>
                        <button class="destroy" ng-click="removeTodo(todo)"></button>
                      </div>
                      <form ng-submit="doneEditing(todo)">
                        <input class="edit" ng-trim="false" ng-model="todo.title" todo-escape="revertEditing(todo)" ng-blur="doneEditing(todo)" todo-focus="todo == editedTodo">
                      </form>
                    </li>
                  </ul>
                </section>
                <footer id="footer" ng-show="todos.length" ng-cloak>
                  <span id="todo-count"><strong>{{remainingCount}}</strong>
                    <ng-pluralize count="remainingCount" when="{ one: 'item left', other: 'items left' }"></ng-pluralize>
                  </span>
                  <ul id="filters">
                    <li>
                      <a ng-class="{selected: status == ''} " href="#/">All</a>
                    </li>
                    <li>
                      <a ng-class="{selected: status == 'active'}" href="#/active">Active</a>
                    </li>
                    <li>
                      <a ng-class="{selected: status == 'completed'}" href="#/completed">Completed</a>
                    </li>
                  </ul>
                  <button id="clear-completed" ng-click="clearCompletedTodos()" ng-show="completedCount">Clear completed ({{completedCount}})</button>
                </footer>
              </section>
            </script>

          </div>

      </div>
    </div>
  </div>
</div>

